pipeline:
  identifier: Build_go_pipeline_sample_1695203410924
  name: Build go-pipeline-sample
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1695203390848
        repoName: Dipchandan-kalita/go-pipeline-sample
        build: <+input>
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Run unit test
                  identifier: Run_unit_test
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      gotestsum --format=standard-verbose --junkfile unit-tests.xml
                      exit 0
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "*.xml"
              - step:
                  type: Run
                  name: Build app
                  identifier: Build_app
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                      exit 0
              - step:
                  type: BuildAndPushDockerRegistry
                  name: build and push to docker hub
                  identifier: build_and_push_to_docker_hub
                  spec:
                    connectorRef: <+input>
                    repo: <+input>
                    tags:
                      - latest
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    connectorRef: account.harnessImage
                    image: plugins/docker
                    settings:
                      dry_run: "true"
                      repo: hello/world
                      tags: latest
                  timeout: ""
                  type: Plugin
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
